diff checkpoint-2/headset-up.js checkpoint-3/headset-up.js
19a20,33
> function formatTime(ms)
> {
> 	if(ms <= 0)
> 		return '00:00';
> 
> 	var seconds = Math.ceil(ms/1000);
> 	var minutes = Math.floor(seconds / 60);
> 	seconds = seconds % 60;
> 	if(minutes < 10) minutes = '0'+minutes;
> 	if(seconds < 10) seconds = '0'+seconds;
> 
> 	return minutes + ':' + seconds;
> }
> 
34a49,99
> AFRAME.registerComponent('timer', {
> 	multiple: true,
> 	schema: {
> 		duration: {type: 'number', default: 30},
> 		on: {type: 'string', default: null},
> 		emit: {type: 'string', default: 'timerend'},
> 		label: {type: 'selector', default: null},
> 		autostart: {type: 'boolean', default: false}
> 	},
> 	init: function()
> 	{
> 		this.endTime = 0;
> 		this.lastUpdate = 0;
> 
> 		if(this.data.on){
> 			this.el.addEventListener(this.data.on, this.start.bind(this));
> 		}
> 
> 		if(this.data.autostart)
> 			this.start();
> 	},
> 	tick: function(time, deltaTime)
> 	{
> 		if(!this.endTime) return;
> 
> 		var label = this.el.hasAttribute('n-text') ? this.el : this.data.label;
> 		var nowTime = performance.now();
> 
> 		if(label && nowTime - this.lastUpdate > 250){
> 			label.setAttribute('n-text', 'text', formatTime(this.endTime - nowTime));
> 			this.lastUpdate = nowTime;
> 		}
> 
> 		if(this.endTime > 0 && nowTime > this.endTime){
> 			this.el.emit(this.data.emit);
> 			this.stop();
> 			if(label)
> 				label.setAttribute('n-text', 'text', '00:00');
> 		}
> 	},
> 	start: function(){
> 		this.endTime = performance.now() + Math.floor(this.data.duration * 1000);
> 	},
> 	stop: function(){
> 		this.endTime = 0;
> 	},
> 	running: function(){
> 		return this.endTime !== 0;
> 	}
> });
> 
37a103,108
> 	init: function()
> 	{
> 		this.el.addEventListener('timerend', (function(){
> 			this.el.setAttribute(this.name, []);
> 		}).bind(this));
> 	},
42a114,116
> 			var target = document.querySelector('.hud[timer]');
> 			if(!target.components.timer.running())
> 				target.components.timer.start();
diff checkpoint-2/index.html checkpoint-3/index.html
22a23,31
> 				<a-mixin id='head-timer'
> 					position='0 0.25 0' rotation='0 180 0'
> 					n-text='text: 1:00; font-size: 1; width: 1; height: 0.1'
> 					timer='duration: 60'
> 					n-skeleton-parent='part: eye'
> 					sync sync-n-skeleton-parent
> 					wire='on: timerend; emit: timerend; targets: [display-phrase]'>
> 				</a-mixin>
> 
55a65
> 			<a-entity class='hud' mixin='head-timer'></a-entity>
